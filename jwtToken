// Install-Package Microsoft.AspNetCore.Authentication.JwtBearer


using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using Microsoft.IdentityModel.Tokens;
using System.Text;

public string GenerateJwtToken(string username)
{
    var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes("Your_Secret_Key_Here"));
    var credentials = new SigningCredentials(securityKey, SecurityAlgorithms.HmacSha256);

    var claims = new[]
    {
        new Claim(JwtRegisteredClaimNames.Sub, username),
        new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),
    };

    var token = new JwtSecurityToken(
        issuer: "Your_Issuer",
        audience: "Your_Audience",
        claims: claims,
        expires: DateTime.Now.AddMinutes(30),
        signingCredentials: credentials
    );

    return new JwtSecurityTokenHandler().WriteToken(token);
}


---------------------------------------------------------------

public void ConfigureServices(IServiceCollection services)
{
    services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
            .AddJwtBearer(options =>
            {
                options.TokenValidationParameters = new TokenValidationParameters
                {
                    ValidateIssuer = true,
                    ValidateAudience = true,
                    ValidateLifetime = true,
                    ValidateIssuerSigningKey = true,
                    ValidIssuer = "Your_Issuer",
                    ValidAudience = "Your_Audience",
                    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes("Your_Secret_Key_Here"))
                };
            });

    // ... other configurations
}


---------------------------------------------------------------

[HttpPost]
[Route("login")]
public IActionResult Login([FromBody] UserLoginDto userLogin)
{
    // User authentication logic here
    // If successful:
    var token = GenerateJwtToken(userLogin.Username);
    return Ok(new { Token = token });
    // Else return unauthorized
}

---------------------------------------------------------------

[Authorize]
public class SecureController : ControllerBase
{
    // Your secured methods here
}

---------------------------------------------------------------
